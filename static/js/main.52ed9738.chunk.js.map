{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Imagen.js","components/ListadoImagenes.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarBusqueda","useState","termino","guardarTermino","error","guardarError","onSubmit","e","preventDefault","trim","type","placeholder","onChange","target","value","Imagen","imagen","largeImageURL","likes","previewURL","tags","views","src","alt","clasName","href","rel","ListadoImagenes","imagenes","map","key","id","App","busqueda","guardarImagenes","paginaActual","guardarPaginaActual","totalPaginas","guardarTotalPaginas","useEffect","a","imagenesPorPagina","url","fetch","respuesta","json","resultado","hits","calcularTotalPaginas","Math","ceil","totalHits","consultarApi","onClick","nuevaPaginaActual","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.52ed9738.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Error = ({ mensaje }) => {\n  return <p className=\"my-3 p-4 text-center alert alert-primary\">{mensaje}</p>;\n};\n\nexport default Error;\n","import React ,{useState} from 'react'\n\nimport Error from './Error';\n//rafcp\nconst Formulario = ({guardarBusqueda}) => {\n    \n    const [termino,guardarTermino] = useState('');\n\n    const [error,guardarError] = useState('');\n\n    const buscarImagenes = e => {\n        e.preventDefault();\n\n        //validar\n        if(termino.trim() === ''){\n            guardarError(true);\n        }else{\n            guardarError(false);\n        }\n\n\n        // enviar el termino de bússqueda hacia el componente principal\n\n        guardarBusqueda(termino);\n    }\n    return (\n        <form\n            onSubmit={buscarImagenes}\n        >\n            <div className=\"row\"> \n                <div className=\"form-group col-md-8\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control form-control-lg\"\n                        placeholder=\"Busca una imagen, ejemplo : futbol o café\"\n                        onChange={ e => guardarTermino(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-lg btn-danger btn-block\"\n                        value=\"Buscar\"\n                    />\n                </div>\n            </div>\n\n            {error ? <Error mensaje=\"Agrega un término de búsqueda\" />  : null}\n        </form>\n    )\n}\n\n\nexport default Formulario;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Imagen = ({ imagen }) => {\n  const { largeImageURL, likes, previewURL, tags, views } = imagen;\n\n  return (\n    <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\n      <div className=\"card\">\n        <img src={previewURL} alt={tags} className=\"card-img-top\" />\n\n        <div className=\"card-body\">\n          <p clasName=\"card-text\">{likes} Me gusta</p>\n          <p clasName=\"card-text\">{views} Vistas</p>\n        </div>\n\n        <div className=\"card-footer\">\n          <a href={largeImageURL} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary btn-block\">\n            Ver Imagen\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nImagen.propTypes = {};\n\nexport default Imagen;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Imagen from './Imagen';\n\nconst ListadoImagenes = ({imagenes}) => {\n    return (\n        <div className= \"col-12 p5 row\">\n            {imagenes.map(imagen => (\n                <Imagen \n                    key={imagen.id}\n                    imagen={imagen}\n                />\n            ))}\n         </div>\n    )\n}\n\nListadoImagenes.propTypes = {\n\n}\n\nexport default ListadoImagenes\n","import React, { useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport ListadoImagenes from \"./components/ListadoImagenes\";\n\nfunction App() {\n  const [busqueda, guardarBusqueda] = useState(\"\");\n  const [imagenes, guardarImagenes] = useState([]);\n  const [paginaActual, guardarPaginaActual] = useState(1);\n  const [totalPaginas, guardarTotalPaginas] = useState(1);\n\n  useEffect(() => {\n    const consultarApi = async () => {\n      if (busqueda === \"\") return;\n\n      const imagenesPorPagina = 30;\n      const key = \"15881027-965e0e42301616ffc6e000db8\";\n      const url = `https://pixabay.com/api/?key=${key}&q=${busqueda}&per_page=${imagenesPorPagina}&page=${paginaActual}`;\n\n      const respuesta = await fetch(url);\n      const resultado = await respuesta.json();\n\n      guardarImagenes(resultado.hits);\n\n      const calcularTotalPaginas = Math.ceil(\n        resultado.totalHits / imagenesPorPagina\n      );\n      guardarTotalPaginas(calcularTotalPaginas);\n    };\n    consultarApi();\n  }, [busqueda,paginaActual]);\n\n  //definir pagina anterior\n\n  const paginaAnterior = () => {\n    const nuevaPaginaActual = paginaActual - 1;\n\n    if (nuevaPaginaActual === 0) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  };\n\n  const paginaSiguiente = () => {\n    const nuevaPaginaActual = paginaActual + 1;\n\n    if (paginaActual > totalPaginas) return;\n\n    guardarPaginaActual(nuevaPaginaActual);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron red\">\n        <p className=\"lead text-center\">Buscador de Imágenes</p>\n        <Formulario guardarBusqueda={guardarBusqueda} />\n      </div>\n      <div className=\"row justify-content-center mb-3\">\n        <ListadoImagenes imagenes={imagenes} />\n\n        {paginaActual === 1 || 0 ? null : (\n          <button\n            type=\"button\"\n            className=\"bbtn btn-success mr-1 btn-lg\"\n            onClick={paginaAnterior}\n          >\n            &laquo; Anterior\n          </button>\n        )}\n\n        {paginaActual === totalPaginas ? null : (\n          <button\n            type=\"button\"\n            className=\"bbtn btn-success btn-lg\"\n            onClick={paginaSiguiente}\n          >\n            Siguiente &raquo;\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}